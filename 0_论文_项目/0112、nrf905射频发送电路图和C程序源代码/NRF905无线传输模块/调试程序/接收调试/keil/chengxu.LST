C51 COMPILER V8.05a   CHENGXU                                                              08/31/2009 22:02:04 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE CHENGXU
OBJECT MODULE PLACED IN chengxu.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE chengxu.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          
   3          #define WC              0x00
   4          #define RC              0x10
   5          #define WTP             0x20
   6          #define RTP             0x21
   7          #define WTA             0x22
   8          #define RTA             0x23
   9          #define RRP             0x24
  10          #define BYTE_BIT0       0x01
  11          #define uchar unsigned char
  12          #define uint unsigned int
  13          unsigned char idata RFConf[11]=
  14          {
  15            0x00,                             //配置命令//
  16            0x4c,                             //CH_NO,配置频段在423MHZ
  17            0x0c,                             //输出功率为10db,不重发，节电为正常模式
  18            0x44,                             //地址宽度设置，为4字节
  19            0x03,0x03,                        //接收发送有效数据长度为3字节
  20            0xCC,0xCC,0xCC,0xCC,              //接收地址
  21            0x58,                             //CRC充许，8位CRC校验，外部时钟信号不使能，16M晶振
  22          };
  23          unsigned char rx_Buffer[]={0};          //用于存放接收到的数据
  24          uchar position[3]={0xFE,0xFC,0xFB};
  25          bdata unsigned  char DATA_BUF;
  26          sbit flag=DATA_BUF^7;
  27          
  28          sbit AM=P3^7;    //      8
  29          sbit CD=P3^6;    //      7
  30          sbit CSN=P1^0;   //13
  31          sbit SCK=P1^1;   //     12
  32          sbit MISO=P1^2;  //     10
  33          sbit MOSI=P1^3;  //     11
  34          sbit DR=P1^4;    //     9
  35          sbit PWR=P1^5;   //     5
  36          sbit TRX_CE=P1^6;//     4
  37          sbit TXEN=P1^7;  //     3
  38          
  39          sbit send_reset =P2^2;
  40          //---------------延时--------------//
  41          void Delay(unsigned char n)
  42          {
  43   1              unsigned int i;
  44   1              while(n--)
  45   1              for(i=0;i<80;i++);
  46   1      }
  47          
  48          void Delay_ms(uchar n)
  49          { 
  50   1              unsigned int i,j,k;
  51   1      
  52   1              for(i=0;i<n;i++)
  53   1              {
  54   2                      for(k=0;k<5;k++)
  55   2                      {
C51 COMPILER V8.05a   CHENGXU                                                              08/31/2009 22:02:04 PAGE 2   

  56   3                              for(j=0;j<200;j++);     
  57   3                      }
  58   2              }
  59   1      }
  60          
  61          void Delay_us(uchar n)
  62          {
  63   1              uint i;
  64   1              for(i=0;i<n;i++);
  65   1      }
  66          
  67          
  68          
  69          //------------SPI写操作代码---------//
  70          
  71          void SpiWrite(unsigned char send)
  72          {
  73   1              unsigned char i;
  74   1              DATA_BUF=send;
  75   1              for (i=0;i<8;i++)
  76   1              {
  77   2                      if (flag)       //总是发送最高位
  78   2                      {
  79   3                              MOSI=1;
  80   3                      }
  81   2                      else
  82   2                      {
  83   3                              MOSI=0;
  84   3                      }
  85   2                      SCK=1;
  86   2                      DATA_BUF=DATA_BUF<<1;
  87   2                      SCK=0;
  88   2              }
  89   1      }
  90          
  91          
  92          //------------SPI读操作代码---------//
  93          unsigned char SpiRead(void)
  94          {
  95   1              unsigned char j;
  96   1              for (j=0;j<8;j++)
  97   1              {
  98   2              DATA_BUF=DATA_BUF<<1;
  99   2                      SCK=1;
 100   2                      if (MISO)       //读取最高位，保存至最末尾，通过左移位完成整个字节
 101   2                      {
 102   3                              DATA_BUF|=BYTE_BIT0;
 103   3                      }
 104   2                      else
 105   2                      {
 106   3                              DATA_BUF&=~BYTE_BIT0;
 107   3                      }
 108   2                      SCK=0;
 109   2               }
 110   1               return DATA_BUF;
 111   1      }
 112          //-----------resive 状态设置------------------//
 113          void SetRxMode(void)
 114          {
 115   1              TXEN=0;
 116   1              TRX_CE=1;
 117   1              Delay(1);                                       // delay for mode change(>=650us)
C51 COMPILER V8.05a   CHENGXU                                                              08/31/2009 22:02:04 PAGE 3   

 118   1      }
 119          //-------------初始化设置---------------//
 120          void nRF905Init(void)
 121          {
 122   1          CSN=1;                                              // Spi  disable
 123   1              SCK=0;                                          // Spi clock line init low
 124   1              DR=1;                                           // 激活单片机IO
 125   1              AM=0;                                           // Init AM for input
 126   1              CD=0;                                           // Init CD for input
 127   1              PWR=1;                                      // nRF905 power on
 128   1              TRX_CE=0;                                       // Set nRF905 in standby mode
 129   1              TXEN=0;                                     // set radio in Rx mode
 130   1      }
 131          
 132          
 133          //----------设置配置寄存器-------//
 134          void Config905(void)
 135          {
 136   1              unsigned char i;
 137   1              CSN=0;                                          
 138   1              //SpiWrite(WC);                         
 139   1              for (i=0;i<11;i++)      
 140   1              {
 141   2                 SpiWrite(RFConf[i]);
 142   2              }
 143   1              CSN=1;                                  
 144   1      }
 145          
 146          //--------------读取RF905接收数据------------//
 147          void RxPacket(void)                                             
 148          {
 149   1              unsigned char i;
 150   1          Delay(1);
 151   1      //      TRX_CE=0;                                       // Set nRF905 in standby mode
 152   1          Delay(100);
 153   1          TRX_CE=0;
 154   1              CSN=0;                                          // Spi enable for write a spi command
 155   1          Delay(1);
 156   1              SpiWrite(RRP);
 157   1              for (i = 0 ;i < 1 ;i++)
 158   1                  { 
 159   2                       rx_Buffer[i]=SpiRead();                // Read data and save to buffer       
 160   2                   }
 161   1              CSN=1;
 162   1           Delay(100);
 163   1               Delay(100);
 164   1           Delay(10);
 165   1               Delay_ms(1000); 
 166   1               TRX_CE=1;                                                      
 167   1      }
 168          //-------检查是否有新数据传入-----------//
 169          unsigned char CheckDR(void)             //检查是否有新数据传入 Data Ready
 170          {
 171   1              if (DR)                    //当数据完全接收DR为1
 172   1              {
 173   2            
 174   2                      return 1;
 175   2              }
 176   1              else
 177   1              {
 178   2                      return 0;
 179   2              }
C51 COMPILER V8.05a   CHENGXU                                                              08/31/2009 22:02:04 PAGE 4   

 180   1      }
 181          
 182          
 183          //------------------------------数据接收------------------//
 184          void  RX(void)
 185          {
 186   1                SetRxMode();                        // Set nRF905 in Rx mode
 187   1                while (CheckDR()==0);       //RX wait
 188   1                        Delay(100);
 189   1                        RxPacket();
 190   1                        Delay_ms(1000);  
 191   1                       
 192   1                        Delay_ms(1000); 
 193   1      }
 194          
 195          void display()
 196           {
 197   1         uchar i;
 198   1      
 199   1            for(i=0;i<3;i++)
 200   1             {  
 201   2                    P0=rx_Buffer[i]; 
 202   2                      //  P0=position[i];
 203   2                    Delay_us(1000); 
 204   2                 }
 205   1               }              
 206           
 207          //-------------主函数---------------// 
 208          void main()
 209           {
 210   1        Delay_ms(100); 
 211   1        nRF905Init();
 212   1        Config905();
 213   1        while(1)
 214   1               {
 215   2                RX();
 216   2                        Delay_ms(100); 
 217   2                        display();
 218   2                       }
 219   1      
 220   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =     11    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
