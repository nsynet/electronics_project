 #include <regx52.h>

#define LCM_RW P3_1 	//定义引脚
#define LCM_RS P3_0
#define LCM_E P3_2
#define LCM_Data P2
#define Busy 0x80 		//用于检测LCM状态字中的Busy标识

void WriteDataLCM(unsigned char WDLCM);           //写数据
void WriteCommandLCM(unsigned char WCLCM,BuysC);  //写命令字
unsigned char ReadDataLCM(void);                  //读数据
unsigned char ReadStatusLCM(void);                //读状态字
void LCMInit(void);
void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData);
void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData);
void Delay5Ms(void);
void Delay400Ms(void);
void Delay4s(void);

unsigned char code yftech[] = {"http:/"};
unsigned char code www[] = {"/www."};
unsigned char code net[] = {"yuanfengkeji.com"};
unsigned char code lianxi[] = {"TEL:371-63738296"};
unsigned char code mobile[] = {"13523005136"};
unsigned char code QQ[] = {"QQ:55837550"};
unsigned char code Email[] = {"mail"};
unsigned char code Email_2[] = {"girlzk@163.com"};

void main(void)
{
	Delay400Ms(); 	//启动等待，等LCM讲入工作状态
	while(1)
	{
	LCMInit(); 	//LCM初始化
	Delay5Ms(); 	//延时片刻(可不要)
	DisplayListChar(3, 0, yftech);
	DisplayListChar(9, 0, www);
	DisplayListChar(0, 1, net);
//	ReadDataLCM();	//测试用句无意义
	Delay4s();	//延时4秒
	LCMInit(); 	//LCM初始化
	DisplayListChar(0, 0, lianxi);
	DisplayListChar(4, 1, mobile);	//空四格开始显示移动电话号码
	Delay4s();
	LCMInit();	 //LCM初始化
	DisplayListChar(0, 0, QQ);
	DisplayListChar(12,0,Email);
	DisplayListChar(2,1,Email_2);
	Delay4s();
	}
}

//写数据
void WriteDataLCM(unsigned char WDLCM)
{
	ReadStatusLCM(); //检测忙
	LCM_Data = WDLCM;
	LCM_RS = 1;
	LCM_RW = 0;
	LCM_E = 0; //若晶振速度太高可以在这后加小的延时
	LCM_E = 0; //延时
	LCM_E = 1;
}

//写指令
void WriteCommandLCM(unsigned char WCLCM,BuysC) //BuysC为0时忽略忙检测
{
	if (BuysC) ReadStatusLCM(); //根据需要检测忙
	LCM_Data = WCLCM;
	LCM_RS = 0;
	LCM_RW = 0; 
	LCM_E = 0;
	LCM_E = 0;
	LCM_E = 1; 
}

//读数据
unsigned char ReadDataLCM(void)
{
	LCM_RS = 1; 
	LCM_RW = 1;
	LCM_E = 0;
	LCM_E = 0;
	LCM_E = 1;
	return(LCM_Data);
}

//读状态
unsigned char ReadStatusLCM(void)
{
	LCM_Data = 0xFF; 
	LCM_RS = 0;
	LCM_RW = 1;
	LCM_E = 0;
	LCM_E = 0;
	LCM_E = 1;
	while (LCM_Data & Busy); //检测忙信号
	return(LCM_Data);
}

void LCMInit(void) //LCM初始化
{
	LCM_Data = 0;            //给数据端口送0
	WriteCommandLCM(0x38,0); //三次显示模式设置，不检测忙信号
	Delay5Ms(); 

	WriteCommandLCM(0x38,1); //显示模式设置,开始要求每次检测忙信号
	WriteCommandLCM(0x08,1); //关闭显示
	WriteCommandLCM(0x01,1); //显示清屏
	WriteCommandLCM(0x06,1); // 显示光标移动设置
	WriteCommandLCM(0x0C,1); // 显示开及光标设置
}

//按指定位置显示一个字符
void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData)
{
	Y &= 0x1;
	X &= 0xF; //限制X不能大于15，Y不能大于1
	if (Y) X |= 0x40; //当要显示第二行时地址码 0x40;
	X |= 0x80; // 算出指令码
	WriteCommandLCM(X, 0); //这里不检测忙信号，发送地址码
	WriteDataLCM(DData);
}

//按指定位置显示一串字符
void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData)
{
	unsigned char ListLength;

	ListLength = 0;
	Y &= 0x1;
	X &= 0xF; //限制X不能大于15，Y不能大于1
	while (DData[ListLength]>0x20) //若到达字串尾则退出
	{
		if (X <= 0xF) //X坐标应小于0xF
		{
			DisplayOneChar(X, Y, DData[ListLength]); //显示单个字符
			ListLength = ListLength+1 ;
			X = X+1 ;
		}
	}
}

//5ms延时
void Delay5Ms(void)
{
	unsigned int TempCyc = 5552;
	while(TempCyc--);
}

//400ms延时
void Delay400Ms(void)
{
	unsigned char TempCycA = 5;
	unsigned int TempCycB;
	while(TempCycA--)
	{
		TempCycB=7269;
		while(TempCycB--);
	};
}
//4s延时
void Delay4s(void)
{
	unsigned char TempCycD = 50;
	unsigned int TempCycE;
	while(TempCycD--)
	{
		TempCycE=7269;
		while(TempCycE--);
	};
}