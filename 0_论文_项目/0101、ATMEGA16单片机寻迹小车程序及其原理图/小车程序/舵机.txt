/*8MHZ晶振*/
#include<iom16v.h>
#include<macros.h>
#define  uchar  unsigned  char 
#define  uint  unsigned  int
void  delay(uint z);
void  main()
{
 	while(1) 
	{
	    //turnLLL();
	   	//turnLL();
		 //turnL();
		 turn(); 
		 //turnR();
		// turnRR();
		turnRR();  
	  	
	 } 
}

/*-45度*/
void  turnLLL()
{
 	uchar i;
	DDRB=0XFF;
	PORTB=0XFF;
	for(i=0;i<200;i++)
	{
		PORTB&=~BIT(0);          				
		delay(10);        
		PORTB|=BIT(0);
		delay(1);
	}
}
/*-30度*/
void  turnLL()
{
 	uchar i;
	DDRB=0XFF;
	PORTB=0XFF;
	for(i=0;i<200;i++)
	{
		PORTB&=~BIT(0);          				
		delay(10);        
		PORTB|=BIT(0);
		delay(2);
	}
}
/*-15度*/
void  turnL()
{
 	uchar i;
	DDRB=0XFF;
	PORTB=0XFF;
	for(i=0;i<200;i++)
	{
		PORTB&=~BIT(0);          				
		delay(10);        
		PORTB|=BIT(0);
		delay(3);
	}
}

/*0度居中*/
void  turn()//居中
{
 	uchar i;
	DDRB=0XFF;
	PORTB=0XFF;
	for(i=0;i<200;i++)
	{
		PORTB&=~BIT(0);          				
		delay(20);        
		PORTB|=BIT(0);
		delay(4);
	}
}

/*15度*/
void  turnR()
{
 	uchar i;
	DDRB=0XFF;
	PORTB=0XFF;
	for(i=0;i<200;i++)
	{
		PORTB&=~BIT(0);          				
		delay(20);        
		PORTB|=BIT(0);
		delay(5);
	}
} 
/*30度*/
void  turnRR()
{
 	uchar i;
	DDRB=0XFF;
	PORTB=0XFF;
	for(i=0;i<200;i++)
	{
		PORTB&=~BIT(0);          				
		delay(20);        
		PORTB|=BIT(0);
		delay(6);
	}
}
/*45度*/
void  turnRRR()
{
 	uchar i;
	DDRB=0XFF;
	PORTB=0XFF;
	for(i=0;i<200;i++)
	{
		PORTB&=~BIT(0);          				
		delay(20);        
		PORTB|=BIT(0);
		delay(8);
	}
}

/*定时0.1MS*/
void  delay(uint z)
{
 	  uint i,j;
	  for(i=0;i<z;i++)
	  		for(j=0;j<20;j++);
}

